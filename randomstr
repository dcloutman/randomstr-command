#! /usr/bin/env python3

import sys
from os import path
import click
from secrets import randbelow


ARG_COUNT = len(sys.argv)
DEFAULT_RAND_STR_LEN = 24
DEFAULT_DISALLOW_LIST = ['"', "'", '`', '$', '\\', '<']
NULL_DISALLOW_LIST = []
MAX_RAND_STR_LEN = 65536


"""
`randomstr` Help:
Generates a random string in the lower ASCII range of 33-126. Default length is 24 characters.

Usage: randomstr [str_len] [--no <string of disallowed characters>]

Characters disallowed by default are: {DEFAULT_DISALLOW_LIST}
"""
#@click.option("--length-range", nargs=2, type=click.Tuple([int, int]), default=click.Tuple([DEFAULT_RAND_STR_LEN, DEFAULT_RAND_STR_LEN]))
#def randomstr(rand_str_len, disallow_list, length_range):
@click.command()
@click.argument("rand_str_len", default=DEFAULT_RAND_STR_LEN)
@click.option("--no", default=DEFAULT_DISALLOW_LIST, help="Overrides the default list of disallowed characters. Pass an empty argument to use all available characters.")
@click.option("--also-no", default="", help="Adds characters to the disallow list without overwriting the existing disallow list. Useful for when characters need to be added to the default disallow list.")
@click.option("--min-length", default=24, help=f"Minimum length of the generated string. Defaults to {DEFAULT_RAND_STR_LEN}.")
@click.option("--max-length", default=24, help=f"Maximum length of the generated string. Defaults to {DEFAULT_RAND_STR_LEN}.")
@click.option("--ruler", is_flag=True, default=False, help="Display a visual guide showing minimum and maximum length above the generated string.")
def randomstr(rand_str_len, no, also_no, min_length, max_length, ruler):
    if rand_str_len < 1:
        print(f"The minimum allowed string length is 1.")
        exit(1)
    
    if min_length != rand_str_len or max_length != rand_str_len:
        if min_length > max_length:
            print("Minimum string length must be less than or equal to maximum string length.")
            exit(1)
        else:
            if ruler:
                print(('-' * (min_length - 1)) + ('=' * ((max_length - min_length) + 1)))

            rand_str_len = randbelow((max_length - min_length) + 1) + min_length

    # Catch excessive string lengths to avoid abuse of the utility.
    if rand_str_len > MAX_RAND_STR_LEN:
        print(f"The maximum allowed string length is {MAX_RAND_STR_LEN} characters.")
        exit(1)

    disallow_list = str_to_unique_char_list(no + also_no)
    print(gen_random_str(rand_str_len, disallow_list))
    exit(0)


def str_to_unique_char_list(string):
    """
    Takes an array and converts it into a string of unique characters.
    """

    # Casting to set de-dupes the characters.
    return ''.join(set(string))


def gen_random_str(rand_str_len, disallow_list):
    """
    Generates the ramdom string.
    """
    output = ''
    i = 0
    while i < rand_str_len:
        ascii_val = randbelow(94) + 33

        # This should never happen, but if it does, fail noticably.
        if ascii_val > 126 or ascii_val < 33:
            raise Exception('Generated ASCII value out of range of acceptable characters.')
            exit(1)

        newchar = chr(ascii_val)
        if not newchar in disallow_list:
            output = output + newchar
            i += 1
    return output

# Start procedural code
if __name__ == '__main__':
    randomstr()